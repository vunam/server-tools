version: '3.5'

services:
  prometheus:
    image: prom/prometheus:v2.0.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
      - nodeexporter:nodeexporter
    depends_on:
      - cadvisor
    restart: always
    networks:
      - back-tier

  nodeexporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
    networks:
      - back-tier

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alert/config.yml:/etc/alertmanager/config.yml
    restart: always
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    networks:
      - back-tier

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always
    networks:
      - back-tier

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - ${PORT}:${PORT}
    restart: always
    volumes:
      - ./grafana_data:/var/lib/grafana
    env_file:
      - .env.grafana
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      GF_SERVER_DOMAIN: ${VIRTUAL_HOST}
      GF_SERVER_ROOT_URL: https://${VIRTUAL_HOST}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
    networks:
      - front-tier
      - back-tier

networks:
  back-tier:
    external:
      name: local
  front-tier:
    external:
      name: nginx-proxy